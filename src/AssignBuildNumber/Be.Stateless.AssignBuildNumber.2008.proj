<?xml version="1.0" encoding="utf-8"?>
<!--Copyright & License

// Copyright © 2012 François Chabot, Yves Dierick
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

-->
<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SolutionDir Condition=" '$(SolutionDir)' == '' Or '$(SolutionDir)' == '*Undefined*' ">$(MSBuildProjectDirectory)\..\</SolutionDir>
    <ExtensionTasksPath Condition=" '$(ExtensionTasksPath)' == '' ">$(SolutionDir)packages\MSBuild.Extension.Pack.1.1.0\lib\net35\</ExtensionTasksPath>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>

  <ItemGroup>
    <VersionFile Include="$(SolutionDir)Version.cs">
      <Attributes>ReadOnly</Attributes>
      <Link>Properties\Version.cs</Link>
    </VersionFile>
  </ItemGroup>

  <Import Project="$(SolutionDir).nuget\nuget.2008.targets" />
  <Import Project="$(ExtensionTasksPath)MSBuild.ExtensionPack.tasks" />

  <Target Name="Build" DependsOnTargets="AssignBuildNumber">
  </Target>

  <Target Name="AssignBuildNumber" DependsOnTargets="ComputeBuildNumber;GenerateVersionFile">
  </Target>

  <Target Name="ComputeBuildNumber">
    <PropertyGroup>
      <BuildNumberComputationCode>
        <![CDATA[
          int major = 1;
          int minor = 0;
          string build = string.Format("{0:yy}{1:000}", DateTime.Today, DateTime.Today.DayOfYear);
          string revision = ((int) ((DateTime.Now - DateTime.Today).TotalSeconds / 1.4)).ToString();
          assemblyVersion = string.Format("{0}.{1}.{2}.{3}", major, minor, 0, 0);
          buildNumber = string.Format("{0}.{1}.{2}.{3}", major, minor, build, revision);
        ]]>
      </BuildNumberComputationCode>
    </PropertyGroup>
    <MSBuild.ExtensionPack.Framework.DynamicExecute TaskAction="Run" Code="$(BuildNumberComputationCode)" Outputs="string assemblyVersion, string buildNumber">
      <Output TaskParameter="Output1" PropertyName="AssemblyVersionNumber"/>
      <Output TaskParameter="Output2" PropertyName="BuildNumber"/>
    </MSBuild.ExtensionPack.Framework.DynamicExecute>
  </Target>

  <Target Name="GenerateVersionFile">
    <ItemGroup>
      <OldAssemblyVersionLines Include="\[assembly\: AssemblyFileVersion.*\]" />
      <OldAssemblyVersionLines Include="\[assembly\: AssemblyInformationalVersion.*\]" />
      <OldAssemblyVersionLines Include="\[assembly\: AssemblyVersion.*\]" />
    </ItemGroup>
    <ItemGroup>
      <NewAssemblyVersionLines Include="[assembly: AssemblyFileVersion(&quot;$(BuildNumber)&quot;)]" />
      <NewAssemblyVersionLines Include="[assembly: AssemblyInformationalVersion(&quot;$(BuildNumber)&quot;)]" />
      <NewAssemblyVersionLines Include="[assembly: AssemblyVersion(&quot;$(AssemblyVersionNumber)&quot;)]" />
    </ItemGroup>
    <MSBuild.ExtensionPack.FileSystem.File TaskAction="RemoveAttributes" Files="@(VersionFile)" ContinueOnError="true" />
    <MSBuild.ExtensionPack.FileSystem.File TaskAction="RemoveLines" Files="@(VersionFile)" Lines="@(OldAssemblyVersionLines)" />
    <MSBuild.ExtensionPack.FileSystem.File TaskAction="WriteLines" Files="@(VersionFile)" Lines="@(NewAssemblyVersionLines)" />
  </Target>
</Project>