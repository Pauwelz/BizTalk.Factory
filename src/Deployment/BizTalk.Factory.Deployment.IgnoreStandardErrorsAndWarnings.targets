<?xml version="1.0" encoding="utf-8" ?>
<!-- 
  Deployment Framework for BizTalk
  Copyright (C) 2008-14 Thomas F. Abraham, 2004-08 Scott Colestock
-->
<!--
  Copyright © 2012 - 2015 François Chabot, Yves Dierick

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- fix deployment warnings, see https://biztalkdeployment.codeplex.com/discussions/545799, but we unfortunately have to duplicate BTDF targets -->

  <PropertyGroup>
    <_CustomErrorRegularExpression>^(?i:(?!command succeeded).*(error).+)$</_CustomErrorRegularExpression>
    <_CustomWarningRegularExpression>^(?i:(?!command succeeded).*(warning)(?!.+(may be necessary to restart the Host Instance|depends on the following assemblies that must be installed)).+)$</_CustomWarningRegularExpression>
  </PropertyGroup>

  <Target Name="DeployPipelines" Condition=" '$(IncludePipelines)' == 'true' " DependsOnTargets="UndeployPipelines">
    <Exec
      Command="BTSTask.exe AddResource -Type:BizTalkAssembly -Overwrite -Source:&quot;@(PipelinesQualified)&quot; -ApplicationName:&quot;$(BizTalkAppName)&quot; -Options:GacOnAdd,GacOnImport,GacOnInstall"
      IgnoreStandardErrorWarningFormat="true"
      CustomErrorRegularExpression="$(_CustomErrorRegularExpression)"
      CustomWarningRegularExpression="$(_CustomWarningRegularExpression)"
      Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'true' " />
    <Exec
      Command="&quot;$(Gacutil)&quot; /f /i &quot;@(PipelinesQualified)&quot;"
      Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'false' " />
    <!-- Deploy PDBS to gac -->
    <GeneratePdbCopyItemGroups SourceAssemblies="@(PipelinesQualified)" Condition=" '$(DeployPDBsToGac)' == 'true' ">
      <Output TaskParameter="SourceItemGroup" ItemName="PipelinesPdbSourceFilesGroup" />
      <Output TaskParameter="DestinationItemGroup" ItemName="PipelinesPdbDestinationFilesGroup" />
    </GeneratePdbCopyItemGroups>
    <Copy SourceFiles="@(PipelinesPdbSourceFilesGroup)" DestinationFiles="@(PipelinesPdbDestinationFilesGroup)" Condition=" '$(DeployPDBsToGac)' == 'true' " ContinueOnError="true" />
  </Target>

  <Target Name="DeploySchemas" DependsOnTargets="UndeploySchemas" Condition=" '$(IncludeSchemas)' == 'true' ">
    <Exec
      Command="BTSTask.exe AddResource -Type:BizTalkAssembly -Overwrite -Source:&quot;@(SchemasQualified)&quot; -ApplicationName:&quot;$(BizTalkAppName)&quot; -Options:GacOnAdd,GacOnImport,GacOnInstall"
      IgnoreStandardErrorWarningFormat="true"
      CustomErrorRegularExpression="$(_CustomErrorRegularExpression)"
      CustomWarningRegularExpression="$(_CustomWarningRegularExpression)"
      Condition=" '$(DeployBizTalkMgmtDB)' == 'true' and '%(Identity)' == '%(Identity)' " />
    <Exec
      Command="&quot;$(Gacutil)&quot; /f /i &quot;@(SchemasQualified)&quot;"
      Condition=" '$(DeployBizTalkMgmtDB)' == 'false' and '%(Identity)' == '%(Identity)' " />
  </Target>

  <Target Name="DeployTransforms" DependsOnTargets="UndeployTransforms" Condition=" '$(IncludeTransforms)' == 'true' ">
    <Exec
      Command="BTSTask.exe AddResource -Type:BizTalkAssembly -Overwrite -Source:&quot;@(TransformsQualified)&quot; -ApplicationName:&quot;$(BizTalkAppName)&quot; -Options:GacOnAdd,GacOnImport,GacOnInstall"
      IgnoreStandardErrorWarningFormat="true"
      CustomErrorRegularExpression="$(_CustomErrorRegularExpression)"
      CustomWarningRegularExpression="$(_CustomWarningRegularExpression)"
      Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'true' " />
    <Exec
      Command="&quot;$(Gacutil)&quot; /f /i &quot;@(TransformsQualified)&quot;"
      Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'false' " />
    <!-- Deploy PDBS to gac. -->
    <GeneratePdbCopyItemGroups SourceAssemblies="@(TransformsQualified)" Condition=" '$(DeployPDBsToGac)' == 'true' ">
      <Output TaskParameter="SourceItemGroup" ItemName="TransformsPdbSourceFilesGroup" />
      <Output TaskParameter="DestinationItemGroup" ItemName="TransformsPdbDestinationFilesGroup" />
    </GeneratePdbCopyItemGroups>
    <Copy SourceFiles="@(TransformsPdbSourceFilesGroup)" DestinationFiles="@(TransformsPdbDestinationFilesGroup)" Condition=" '$(DeployPDBsToGac)' == 'true' " ContinueOnError="true" />
  </Target>

  <Target Name="DeployOrchestrations" Condition="'$(IncludeOrchestrations)' == 'true'">
    <Exec
      Command="BTSTask.exe AddResource -Type:BizTalkAssembly -Overwrite -Source:&quot;@(OrchestrationsQualified)&quot; -ApplicationName:&quot;$(BizTalkAppName)&quot; -Options:GacOnAdd,GacOnImport,GacOnInstall"
      IgnoreStandardErrorWarningFormat="true"
      CustomErrorRegularExpression="$(_CustomErrorRegularExpression)"
      CustomWarningRegularExpression="$(_CustomWarningRegularExpression)"
      Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'true'" />
    <Exec Command="&quot;$(Gacutil)&quot; /f /i &quot;@(OrchestrationsQualified)&quot;"
          Condition="%(Identity) == %(Identity) and '$(DeployBizTalkMgmtDB)' == 'false'" />
    <!-- Deploy PDBS to gac -->
    <GeneratePdbCopyItemGroups SourceAssemblies="@(OrchestrationsQualified)" Condition="'$(DeployPDBsToGac)' == 'true'">
      <Output TaskParameter="SourceItemGroup" ItemName="OrchestrationsPdbSourceFilesGroup" />
      <Output TaskParameter="DestinationItemGroup" ItemName="OrchestrationsPdbDestinationFilesGroup" />
    </GeneratePdbCopyItemGroups>
    <Copy SourceFiles="@(OrchestrationsPdbSourceFilesGroup)" DestinationFiles="@(OrchestrationsPdbDestinationFilesGroup)" Condition="'$(DeployPDBsToGac)' == 'true'"
          ContinueOnError="true" />
  </Target>

</Project>